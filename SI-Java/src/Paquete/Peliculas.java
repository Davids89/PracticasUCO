/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Paquete;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author i12luqud
 */
public class Peliculas extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Peliculas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(1, 1, 1));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/home20x20.png"))); // NOI18N
        jLabel1.setText("Inicio");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/novedad20x20.png"))); // NOI18N
        jLabel25.setText("Novedades");
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel25MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel25MouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/peliculas20x20.png"))); // NOI18N
        jLabel4.setText("Pel√≠culas");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/series20x20.png"))); // NOI18N
        jLabel5.setText("Series");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel25)
                            .addComponent(jLabel5))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(330, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 140, 576);

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/busqueda20x20.png"))); // NOI18N
        jLabel2.setText("Buscar");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/user.png"))); // NOI18N
        jLabel38.setText("Usuario");
        jLabel38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel38MouseClicked(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/help20x20.png"))); // NOI18N
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 773, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addGap(40, 40, 40)
                .addComponent(jLabel20)
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel20)
                        .addComponent(jLabel38))
                    .addComponent(jLabel2))
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(138, 0, 1024, 60);

        jPanel4.setBackground(new java.awt.Color(1, 1, 1));
        jPanel4.setPreferredSize(new java.awt.Dimension(580, 679));

        jLabel21.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(254, 254, 254));
        jLabel21.setText("Acci√≥n");
        jLabel21.setToolTipText("");

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Pompeya.jpg"))); // NOI18N
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Gladiator.jpg"))); // NOI18N
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/avatar.jpg"))); // NOI18N
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(254, 254, 254));
        jLabel26.setText("Aventura");

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Brick_Mansion.jpg"))); // NOI18N
        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Divergent.jpg"))); // NOI18N
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
        });

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Heaven_is_for_real.jpg"))); // NOI18N
        jLabel29.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(254, 254, 254));
        jLabel30.setText("Animaci√≥n");

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/gru2Peque√±a.jpg"))); // NOI18N
        jLabel31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/WallE.jpg"))); // NOI18N
        jLabel32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Rio2.jpg"))); // NOI18N
        jLabel33.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(254, 254, 254));
        jLabel34.setText("Terror");

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Scream4.jpg"))); // NOI18N
        jLabel35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Los_huespedes.jpg"))); // NOI18N
        jLabel36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Mientras_duermes.jpg"))); // NOI18N
        jLabel37.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel37MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel31))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel32))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel24)))
                    .addComponent(jLabel30))
                .addGap(86, 86, 86)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel35))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel36))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel29))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel35)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32))))
                .addContainerGap())
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(140, 59, 1030, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // A inicio
        Principal ventana = new Principal();
        ventana.setSize(1160, 570);
        ventana.setResizable(false);
        ventana.setTitle("Principal");
        ventana.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // Esta pelicula es Pompeya
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);

        pelicula.nombrePelicula("Pompeya");
        pelicula.setTitle("Pompeya");
        pelicula.directorPelicula("<html><body>Director: Paul W.S. Anderson</html></body>");
        pelicula.valoracion("Nota: 6.5 - Bien");
        pelicula.sinopsis("<html><body>Pompeya, a√±o 79 d.C. Milo (Kit Harington), un esclavo convertido en gladiador, ve c√≥mo a su amor, la joven Cassia (Emily Browning), la obligan a prometerse con Corvus (Kiefer Sutherland), un corrupto senador. Cuando el Vesubio entra en erupci√≥n amenazando con destruirlo todo, Milo intentar√° salvarla... mientras todo se derrumba.</html></body>");
        pelicula.icono("/iconos/Pompeya.jpg");
    
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        // Esta pelicula es Gladiator
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Gladiator");
        pelicula.setTitle("Gladiator");
        pelicula.directorPelicula("<html><body>Director: Ridley Scott</html></body>");
        pelicula.valoracion("Nota: 9.0 - Sobresaliente");
        pelicula.sinopsis("<html><body>En el a√±o 180, el Imperio Romano domina todo el mundo conocido. Tras la victoria sobre los b√°rbaros, el anciano emperador Marco Aurelio (Richard Harris) decide transferir el poder a M√°ximo (Russell Crowe), bravo general de sus ej√©rcitos y hombre de inquebrantable lealtad al imperio, pero su hijo C√≥modo (Joaquin Phoenix) no lo acepta y trata de asesinarlo.</html></body>");
        pelicula.icono("/iconos/Gladiator.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        // Esta pelicula es Avatar
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Avatar");
        pelicula.setTitle("Avatar");
        pelicula.directorPelicula("<html><body>Director: James Cameron</html></body>");
        pelicula.valoracion("Nota: 8.3 - Notable");
        pelicula.sinopsis("<html><body>A√±o 2154.  Jake Sully (Sam Worthington), un ex-marine condenado a vivir en una silla de ruedas, sigue siendo, a pesar de ello, un aut√©ntico guerrero. Precisamente por ello ha sido designado para ir a Pandora, donde algunas empresas est√°n extrayendo un mineral extra√±o que podr√≠a resolver la crisis energ√©tica de la Tierra. Para contrarrestar la toxicidad de la atm√≥sfera de Pandora, se ha creado el programa Avatar, gracias al cual los humanos \"conductores\" mantienen sus conciencias unidas a un avatar: un cuerpo biol√≥gico controlado de forma remota que puede sobrevivir en el aire letal. Esos cuerpos han sido creados con ADN humano, mezclado con ADN de los nativos de Pandora, los Na'vi. Convertido en avatar, Jake puede caminar otra vez. Su misi√≥n consiste en infiltrarse entre los Na'vi, que se han convertido en el mayor obst√°culo para la extracci√≥n del mineral. Pero cuando Neytiri, una bella Na'vi (Zoe Saldana), salva la vida de Jake, todo cambia: Jake es admitido en su clan, tras superar muchas pruebas. Mientras, los hombres esperan que la informaci√≥n obtenida por Jake les sea √∫til.</html></body>");
        pelicula.icono("/iconos/avatar.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        // Esta pelicula es Brick Mansions
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Brick Mansions");
        pelicula.setTitle("Brick Mansions");
        pelicula.directorPelicula("<html><body>Director: Camille Delamarre</html></body>");
        pelicula.valoracion("Nota: 7.6 - Notable");
        pelicula.sinopsis("<html><body>En un Detroit dist√≥pico, las antiguas mansiones de ladrillo ahora dan cobijo a algunos de los delincuentes m√°s peligrosos de la ciudad. En un intento desesperado por proteger el resto de la ciudad, la polic√≠a construye, alrededor de esas mansiones, un muro de contenci√≥n. Mientras el agente secreto Damian Coller (Paul Walker) libra una dura batalla contra la corrupci√≥n; Lino (David Belle), un ex-convicto, lucha por llevar una vida honesta. Sus caminos nunca deber√≠an haberse cruzado, pero cuando el capo de la droga, Tremain (RZA), secuestra a la novia de Lino, Damian se ve obligado a aceptar su ayuda para intentar detener una siniestra trama que pretende acabar con toda la ciudad... Remake de Distrito 13</html></body>");
        pelicula.icono("/iconos/Brick_Mansion.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        // Esta pelicula es Divergente
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Divergente");
        pelicula.setTitle("Divergente");
        pelicula.directorPelicula("<html><body>Director: Neil Burger</html></body>");
        pelicula.valoracion("Nota: 8.0 - Notable");
        pelicula.sinopsis("<html><body>Ambientada en un mundo dist√≥pico que se divide en cinco categor√≠as: Verdad, Abnegaci√≥n, Osad√≠a, Cordialidad y Erudici√≥n. Todos los miembros de esta sociedad tienen que elegir, a los 16 a√±os, a qu√© bando creen pertenecer, atendiendo a sus virtudes personales m√°s destacadas. En este dilema se encuentra la protagonista, Beatrice, que sorprende a todos sus allegados y amigos con la decisi√≥n que toma. Beatrice, que pasa a llamarse m√°s tarde Tris Prior, tiene que buscar su lugar adecuado, pero ella no es como el resto. Guarda un secreto que podr√≠a ser definitivo para mantener el orden social descrito y tambi√©n para salvar su propia vida...</html></body>");
        pelicula.icono("/iconos/Divergent.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel28MouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        // Esta pelicula es El cielo es real
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("El cielo es real");
        pelicula.setTitle("El cielo es real");
        pelicula.directorPelicula("<html><body>Director: Randall Wallace</html></body>");
        pelicula.valoracion("Nota: 6.7 - Bien");
        pelicula.sinopsis("<html><body>El actor nominado al Oscar¬Æ y ganador del Emmy¬Æ Greg Kinnear (Mejor‚Ä¶ imposible, Peque√±a Miss Sunshine) encarna a Todd Burpo, un peque√±o empresario, bombero voluntario, pastor, y padre de familia que intenta llegar a fin de mes en lo que ha sido un a√±o duro. Tras tener que someterse Colton (el reci√©n llegado Connor Corum en su debut cinematogr√°fico), el inteligente hijo menor de la familia, a una cirug√≠a de emergencia en el hospital, sus padres, Todd y Sonja (Kelly Reilly, El vuelo, Sherlock Holmes) est√°n locos de contentos por el milagro de su recuperaci√≥n. Pero no est√°n preparados para lo que ocurre a continuaci√≥n -- Colton empieza a hablarles con total naturalidad y seguridad sobre su asombroso viaje de ida y vuelta al cielo. Cuando Colton inocentemente le cuenta a sus padres detalles de cosas que es imposible que pueda saber, Todd se topa con un muro de misterios y dudas hasta que lo derrumba y halla esperanza, el asombro, y la fuerza del prop√≥sito.</html></body>");
        pelicula.icono("/iconos/Heaven_is_for_real.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // Esta pelicula es Gru, mi villano favorito 2
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Gru, mi villano favorito 2");
        pelicula.setTitle("Gru, mi villano favorito 2");
        pelicula.directorPelicula("<html><body>Directores: Pierre Coffin, Chris Renaud</html></body>");
        pelicula.valoracion("Nota: 8.3 - Notable");
        pelicula.sinopsis("<html><body>Ahora que el incansable y emprendedor Gru ha dejado atr√°s una vida dedicada a las fechor√≠as para criar a Margo, Edith y Agnes, dispone de mucho tiempo libre para disfrutarlo con ellas, el Dr. Nefario y los minions. Pero, justo cuando empieza a adaptarse a su papel de hombre de familia, una organizaci√≥n mundial ultrasecreta dedicada a la lucha contra el mal llama a su puerta. Junto con su nueva compa√±era de aventuras, Lucy Wilde, Gru tendr√° que descubrir qui√©n es el responsable de un espectacular y mal√©volo plan y llevarlo ante la justicia. Y es que hace falta echar mano del mayor ex-villano del mundo para atrapar a quien aspira a ocupar ese lugar.</html></body>");
        pelicula.icono("/iconos/gru2Peque√±a.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        // Esta pelicula es Wall-e
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Wall-e");
        pelicula.setTitle("Wall-e");
        pelicula.directorPelicula("<html><body>Director: Andrew Stanton</html></body>");
        pelicula.valoracion("Nota: 8.3 - Notable");
        pelicula.sinopsis("<html><body>En el a√±o 2700, en un planeta Tierra devastado y sin vida, tras cientos de solitarios a√±os haciendo aquello para lo que fue construido -limpiar el planeta de basura- el peque√±o robot WALL-E (acr√≥nimo de Waste Allocation Load Lifter Earth-Class) descubre una nueva misi√≥n en su vida (adem√°s de recolectar cosas inservibles) cuando se encuentra con una moderna y lustrosa robot exploradora llamada EVE. Ambos viajar√°n a lo largo de la galaxia y vivir√°n una emocionante e inolvidable aventura...</html></body>");
        pelicula.icono("/iconos/WallE.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        // Esta pelicula es Rio 2
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Rio 2");
        pelicula.setTitle("Rio 2");
        pelicula.directorPelicula("<html><body>Director: Carlos Saldanha</html></body>");
        pelicula.valoracion("Nota: 7.6 - Notable");
        pelicula.sinopsis("<html><body>Blu, Perla y sus tres hijos est√°n viviendo lo que parece ser la vida perfecta en la ciudad m√°gica que le da nombre. Sin embargo Perla piensa que los ni√±os tienen que aprender a vivir como p√°jaros de verdad, como p√°jaros salvajes, por lo que la familia se ver√° obligada a trasladarse al Amazonas donde Blu, aparte de tener que adaptarse a sus nuevos vecinos, tendr√° que lidiar con el miedo por perder a su familia ante la llamada de la madre naturaleza.</html></body>");
        pelicula.icono("/iconos/Rio2.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // Esta pelicula es Scream 4
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Scream 4");
        pelicula.setTitle("Scream 4");
        pelicula.directorPelicula("<html><body>Director: Wes Craven</html></body>");
        pelicula.valoracion("Nota: 6.6 - Bien");
        pelicula.sinopsis("<html><body>Cuarta entrega de la popular saga de terror \"Scream\". Sidney Prescott ha logrado olvidar los asesinatos cometidos en Woodsboro. Diez a√±os despu√©s, convertida en una escritora de √©xito, vuelve a su pueblo natal con motivo de la gira de promoci√≥n de su nuevo libro. Pero su regreso ir√° acompa√±ado de una nueva ola de cr√≠menes perpetrados por un viejo conocido: Ghostface.</html></body>");
        pelicula.icono("/iconos/Scream4.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        // Esta pelicula es Los Hu√©spedes
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.nombrePelicula("Los Hu√©spedes");
        pelicula.setTitle("Los Hu√©spedes");
        pelicula.directorPelicula("<html><body>Director: Ti West</html></body>");
        pelicula.valoracion("Nota: 5.2 - Suficiente");
        pelicula.sinopsis("<html><body>The Innkeepers se centrar√° en los dos √∫ltimos empleados de un hotel antes que este cierre sus puertas. Despu√©s de cien a√±os en el negocio, el Yankee Pedlar Hotel est√° a punto de cerrar. Sus dos √∫ltimos empleados son Claire, una chica alrededor de los veinte que ha aceptado su lugar en la vida, y Luke, un chico experto en computadoras y solitario. Ambos tienen la obsesi√≥n de que el hotel est√° maldito y est√°n dispuestos a demostrarlo. El tiempo se les echa encima en los d√≠as de la operaci√≥n, con misteriosos invitados como Leanne Reese-Jones, una antigua actriz de televisi√≥n reconvertida en ps√≠quica, y una anciano que persiste en quedarse en su habitaci√≥n, la 353. Varios acontecimientos extra√±os se empiezan a suceder, y Claire y Luke deber√°n tomar la crucial decisi√≥n sobre que creer y que no creer.</html></body>");
        pelicula.icono("/iconos/Los_huespedes.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel36MouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
        // Esta pelicula es Mientras duermes
        PeliculaFinal pelicula = new PeliculaFinal();
        pelicula.setSize(1160, 570);
        pelicula.setResizable(false);
        pelicula.setDefaultCloseOperation(pelicula.DO_NOTHING_ON_CLOSE);
        
        pelicula.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        pelicula.setLocationRelativeTo(null);
       
        pelicula.setTitle("Mientras duermes");
        pelicula.nombrePelicula("Mientras duermes");
        pelicula.directorPelicula("<html><body>Director: Jaume Balaguer√≥</html></body>");
        pelicula.valoracion("Nota: 7.3 - Notable");
        pelicula.sinopsis("<html><body>C√©sar trabaja de portero en un edificio de apartamentos. Puede que no sea el mejor trabajo del mundo, pero la verdad es que no lo cambiar√≠a por ning√∫n otro, ya que su trabajo le permite conocer a fondo a todos los inquilinos del inmueble, sus movimientos, sus h√°bitos. Desde su posici√≥n resulta f√°cil controlar sus idas y venidas, estudiarles, descubrir sus puntos d√©biles, sus secretos. Si quisiera podr√≠a incluso controlar sus vidas, influir en ellas como si fuera Dios, abrir sus heridas y hurgar en ellas. Y todo sin levantar ninguna sospecha. Porque C√©sar tiene un secreto, un juego particular: le gusta hacer da√±o, mover las piezas necesarias para crear dolor a su alrededor. Y la nueva vecina del 5¬∫ B no deja de sonre√≠r. Entra y sale cada d√≠a radiante y feliz, llena de luz. As√≠ que pronto se convertir√° en el nuevo objetivo de C√©sar. Un reto personal. Una obsesi√≥n. El juego de C√©sar va a empezar a complicarse m√°s de la cuenta. Pronto se volver√° impredecible. Peligroso. Si no tiene cuidado, incluso podr√≠a volverse contra √©l.</html></body>");
        pelicula.icono("/iconos/Mientras_duermes.jpg");
                
        this.setVisible(false);
        pelicula.setVisible(true);
    }//GEN-LAST:event_jLabel37MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        //Esto abre el panel de buscar
        Buscar buscador = new Buscar();
        buscador.setSize(511, 107);
        buscador.setTitle("Buscar");
        buscador.setResizable(false);
        buscador.setDefaultCloseOperation(buscador.HIDE_ON_CLOSE);
        buscador.setLocationRelativeTo(null);
        buscador.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        jLabel1.setForeground(Color.black);
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        jLabel1.setForeground(Color.white);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        jLabel2.setForeground(Color.white);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        jLabel2.setForeground(Color.black);
    }//GEN-LAST:event_jLabel2MouseExited

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        //ESTE LLEVA A SERIES
        Series ventana = new Series();
        ventana.setSize(1160, 570);
        ventana.setResizable(false);
        ventana.setTitle("Series");
        ventana.setDefaultCloseOperation(ventana.DO_NOTHING_ON_CLOSE);
        
        ventana.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        jLabel5.setForeground(Color.white);
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        jLabel5.setForeground(Color.black);
    }//GEN-LAST:event_jLabel5MouseExited

    private void jLabel25MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseEntered
        jLabel25.setForeground(Color.white);
    }//GEN-LAST:event_jLabel25MouseEntered

    private void jLabel25MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseExited
        jLabel25.setForeground(Color.black);
    }//GEN-LAST:event_jLabel25MouseExited

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        Novedades ventana = new Novedades();
        ventana.setSize(1160, 570);
        ventana.setResizable(false);
        ventana.setTitle("Novedades");
        ventana.setDefaultCloseOperation(ventana.DO_NOTHING_ON_CLOSE);
        
        ventana.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e)
            {
                String mensaje, titulo;
                mensaje = "¬øQuieres salir?";
                titulo = "Salir";
                Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));
                int reply = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.YES_NO_OPTION, 1, UCO);
                if(reply == JOptionPane.YES_NO_OPTION)
                {
                    System.exit(reply);
                }
            }
        });
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        // Abrimos el panel de usuario
        Usuario usuario = new Usuario();
        usuario.setSize(500, 300);
        usuario.setDefaultCloseOperation(usuario.HIDE_ON_CLOSE);
        usuario.setLocationRelativeTo(null);
        usuario.setVisible(true);
    }//GEN-LAST:event_jLabel38MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        //Este es el menu de ayuda del principal
        JOptionPane panel = new JOptionPane();

        Icon UCO = new ImageIcon(getClass().getResource("/iconos/UCO.png"));

        panel.showMessageDialog(panel, "<html><body>Este es el menu de pel√≠culas\n"
            + "Puedes entrar en el perfil de la pel√≠cula pulsando en el icono de su portada\n"
            , "Ayuda", WIDTH, UCO);
    }//GEN-LAST:event_jLabel20MouseClicked

    public String nombreBoton(JButton boton)
    {
        return boton.getName();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Peliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Peliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Peliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Peliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
